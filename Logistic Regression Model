Improving Logistic Regression Model by removing insignificant variables

install.packages("gmodels")
install.packages("Hmisc")
install.packages("pROC")
install.packages("ResourceSelection")
install.packages("car")
install.packages("caret")
install.packages("dplyr")
library(gmodels)
library(Hmisc)
library(pROC)
library(ResourceSelection)
library(car)
library(caret)
library(dplyr)
install.packages("InformationValue")
library(InformationValue)
cat("\014")
getwd()
setwd("C:\\Users\\Ayushi Mona\\Documents\\Term IV\\AMMA2017\\Data_2017") 
df.client <- read.csv('bank_client.csv')
str(df.client)

df.attr <- read.csv('bank_other_attributes.csv')
str(df.attr)

df.campaign <- read.csv('latest_campaign.csv')
str(df.campaign)

df.campOutcome <- read.csv('campaign_outcome.csv')
str(df.campOutcome)

df.temp1 <- merge(df.client, df.campaign, by = 'Cust_id', all.x = TRUE)
df.temp2 <- merge(df.temp1, df.attr, by = 'Cust_id', all.x = TRUE)
df.data <- merge(df.temp2, df.campOutcome, by = 'Cust_id', all.x = TRUE)
length(unique(df.data$Cust_id)) == nrow(df.data) #checking for any duplicate customer ID

rm(df.temp1,df.temp2)
head(df.data)
View(df.data)
df.data_final <- df.data
df.data_final$yact = ifelse(df.data$y == 'yes',1,0) #Loading 1s for 'yes' and 0s for 'no'
nrow(df.data_final)
df.data_final <- df.data_final[!apply(df.data_final[,c("age", "balance", "duration", "campaign", "pdays", "previous", "job","marital", "education", "default", "housing", "loan", "poutcome")], 1, anyNA),]
nrow(df.data_final)
View(df.data_final)
set.seed(1234) 
df.data_final$rand <- runif(nrow(df.data_final))
#Training set = 90% of the entire data set #Test set = 10% of the entire data set
df.train_Ayushi_Mona_model <- df.data_final[df.data_final$rand <= 0.9,]
df.test_Ayushi_Mona_model <- df.data_final[df.data_final$rand > 0.9,]
nrow(df.train_Ayushi_Mona_model)
gc()
#Building model - with all the insignificant variables
result_tentative_trainAyushi_Mona_model <- glm(formula = yact ~ age + balance + duration + campaign + pdays + previous +
                                      job + marital + education + default + housing + loan + poutcome, 
                                    data=df.train_Ayushi_Mona_model, family = binomial)
summary(result_tentative_trainAyushi_Mona_model)
# removing insignificant variables - 1) job unknown removed
df.train_Ayushi_Mona_model_onlysig <- df.train_Ayushi_Mona_model[df.train_Ayushi_Mona_model$job!="unknown",]
result_tentative_trainAyushi_Mona_model_sig1 <- glm(formula = yact ~ age + balance + duration + campaign + pdays + previous +
                                           job + marital + education + default + housing + loan + poutcome, 
                                         data=df.train_Ayushi_Mona_model_onlysig, family = binomial)
df.test_Ayushi_Mona_model_onlysig <- df.test_Ayushi_Mona_model[df.test_Ayushi_Mona_model$job!="unknown",]
summary(result_tentative_trainAyushi_Mona_model_sig1)
# removing insignificant variables - 2) pdays removed
df.train_Ayushi_Mona_model_onlysig$pdays <-NULL
result_tentative_trainAyushi_Mona_model_sig1 <- glm(formula = yact ~ age + balance + duration + campaign + previous +
                                           job + marital + education + default + housing + loan + poutcome, 
                                         data=df.train_Ayushi_Mona_model_onlysig, family = binomial)
df.test_Ayushi_Mona_model_onlysig$pdays <-NULL
summary(result_tentative_trainAyushi_Mona_model_sig1)
# removing insignificant variables - 3) marital status 'single' removed
df.train_Ayushi_Mona_model_onlysig <- df.train_Ayushi_Mona_model_onlysig[df.train_Ayushi_Mona_model_onlysig$marital!="single",]
result_tentative_trainAyushi_Mona_model_sig1 <- glm(formula = yact ~ age + balance + duration + campaign + previous +
                                           job + marital + education + default + housing + loan + poutcome, 
                                         data=df.train_Ayushi_Mona_model_onlysig, family = binomial)
df.test_Ayushi_Mona_model_onlysig <- df.test_Ayushi_Mona_model_onlysig[df.test_Ayushi_Mona_model_onlysig$marital!="single",]
summary(result_tentative_trainAyushi_Mona_model_sig1)
# removing insignificant variables - 4) removing default altogether (because it holds only one value throughout)
df.train_Ayushi_Mona_model_onlysig <- df.train_Ayushi_Mona_model_onlysig[df.train_Ayushi_Mona_model_onlysig$marital!="yes",]
result_tentative_trainAyushi_Mona_model_sig1 <- glm(formula = yact ~ age + balance + duration + campaign + previous +
                                           job + marital + education + housing + loan + poutcome, 
                                         data=df.train_Ayushi_Mona_model_onlysig, family = binomial)
df.test_Ayushi_Mona_model_onlysig <- df.test_Ayushi_Mona_model_onlysig[df.test_Ayushi_Mona_model_onlysig$marital!="yes",]
summary(result_tentative_trainAyushi_Mona_model_sig1)
# removing insignificant variables - 5) removing job 'management'
df.train_Ayushi_Mona_model_onlysig <- df.train_Ayushi_Mona_model_onlysig[df.train_Ayushi_Mona_model_onlysig$job!="management",]
result_tentative_trainAyushi_Mona_model_sig1 <- glm(formula = yact ~ age + balance + duration + campaign + previous +
                                           job + marital + education + housing + loan + poutcome, 
                                         data=df.train_Ayushi_Mona_model_onlysig, family = binomial)
df.test_Ayushi_Mona_model_onlysig <- df.test_Ayushi_Mona_model_onlysig[df.test_Ayushi_Mona_model_onlysig$job!="management",]
summary(result_tentative_trainAyushi_Mona_model_sig1)
# removing insignificant variables - 6) removing poutcome 'other'
df.train_Ayushi_Mona_model_onlysig <- df.train_Ayushi_Mona_model_onlysig[df.train_Ayushi_Mona_model_onlysig$poutcome!="other",]
result_tentative_trainAyushi_Mona_model_sig1 <- glm(formula = yact ~ age + balance + duration + campaign + previous +
                                           job + marital + education + housing + loan + poutcome, 
                                         data=df.train_Ayushi_Mona_model_onlysig, family = binomial)
df.test_Ayushi_Mona_model_onlysig <- df.test_Ayushi_Mona_model_onlysig[df.test_Ayushi_Mona_model_onlysig$poutcome!="other",]
summary(result_tentative_trainAyushi_Mona_model_sig1)
# removing insignificant variables - 7) removing job 'entrepreneur'
df.train_Ayushi_Mona_model_onlysig <- df.train_Ayushi_Mona_model_onlysig[df.train_Ayushi_Mona_model_onlysig$job!="entrepreneur",]
result_tentative_trainAyushi_Mona_model_sig1 <- glm(formula = yact ~ age + balance + duration + campaign + previous +
                                           job + marital + education + housing + loan + poutcome, 
                                         data=df.train_Ayushi_Mona_model_onlysig, family = binomial)
df.test_Ayushi_Mona_model_onlysig <- df.test_Ayushi_Mona_model_onlysig[df.test_Ayushi_Mona_model_onlysig$job!="entrepreneur",]
summary(result_tentative_trainAyushi_Mona_model_sig1)
# removing insignificant variables - 8) removing education 'unknown'
df.train_Ayushi_Mona_model_onlysig <- df.train_Ayushi_Mona_model_onlysig[df.train_Ayushi_Mona_model_onlysig$education!="unknown",]
result_tentative_trainAyushi_Mona_model_sig1 <- glm(formula = yact ~ age + balance + duration + campaign + previous +
                                           job + marital + education + housing + loan + poutcome, 
                                         data=df.train_Ayushi_Mona_model_onlysig, family = binomial)
df.test_Ayushi_Mona_model_onlysig <- df.test_Ayushi_Mona_model_onlysig[df.test_Ayushi_Mona_model_onlysig$education!="unknown",]
summary(result_tentative_trainAyushi_Mona_model_sig1)
# removing insignificant variables - 9) removing job 'student'
df.train_Ayushi_Mona_model_onlysig <- df.train_Ayushi_Mona_model_onlysig[df.train_Ayushi_Mona_model_onlysig$job!="student",]
result_tentative_trainAyushi_Mona_model_sig1 <- glm(formula = yact ~ age + balance + duration + campaign + previous +
                                           job + marital + education + housing + loan + poutcome, 
                                         data=df.train_Ayushi_Mona_model_onlysig, family = binomial)
df.test_Ayushi_Mona_model_onlysig <- df.test_Ayushi_Mona_model_onlysig[df.test_Ayushi_Mona_model_onlysig$job!="student",]
summary(result_tentative_trainAyushi_Mona_model_sig1)
# removing insignificant variables - 10) removing job 'unemployed'
df.train_Ayushi_Mona_model_onlysig <- df.train_Ayushi_Mona_model_onlysig[df.train_Ayushi_Mona_model_onlysig$job!="unemployed",]
result_tentative_trainAyushi_Mona_model_sig1 <- glm(formula = yact ~ age + balance + duration + campaign + previous +
                                           job + marital + education + housing + loan + poutcome, 
                                         data=df.train_Ayushi_Mona_model_onlysig, family = binomial)
df.test_Ayushi_Mona_model_onlysig <- df.test_Ayushi_Mona_model_onlysig[df.test_Ayushi_Mona_model_onlysig$job!="unemployed",]
summary(result_tentative_trainAyushi_Mona_model_sig1)
#no more insignificant variables left. All independent variables left behind are significant.
#Loading the final model into result_Ayushi_Mona_model_sig1
result_Ayushi_Mona_model_sig1 <- result_tentative_trainAyushi_Mona_model_sig1
class(result_Ayushi_Mona_model_sig1)
print(result_Ayushi_Mona_model_sig1)
plot(result_Ayushi_Mona_model_sig1)
plot(result_Ayushi_Mona_model_sig1)
varImp(result_Ayushi_Mona_model_sig1, scale = FALSE)
fit_Ayushi_Mona_model <- lm(formula <- yact ~ age + balance + duration + campaign + previous +
                   job + marital + education + housing + loan + poutcome, 
                 data=df.train_Ayushi_Mona_model_onlysig)
vif(fit_Ayushi_Mona_model)
backward_Ayushi_Mona_model <- step(result_Ayushi_Mona_model_sig1, direction = 'backward')
summary(backward_Ayushi_Mona_model)
result_Ayushi_Mona_model_probs <- df.train_Ayushi_Mona_model_onlysig
nrow(result_Ayushi_Mona_model_probs)
class(result_Ayushi_Mona_model_probs)
#Using the model made to make predictions in the column named 'prob'
result_Ayushi_Mona_model_probs$prob = predict(result_Ayushi_Mona_model_sig1, type=c("response"))
q_Ayushi_Mona_model <- roc(y ~ prob, data = result_Ayushi_Mona_model_probs)
plot(q_Ayushi_Mona_model)
auc(q_Ayushi_Mona_model)

CrossTable(df.train_Ayushi_Mona_model_onlysig$job, df.train_Ayushi_Mona_model_onlysig$y)
CrossTable(df.train_Ayushi_Mona_model_onlysig$marital, df.train_Ayushi_Mona_model_onlysig$y)
CrossTable(df.train_Ayushi_Mona_model_onlysig$education, df.train_Ayushi_Mona_model_onlysig$y)
CrossTable(df.train_Ayushi_Mona_model_onlysig$default, df.train_Ayushi_Mona_model_onlysig$y)
CrossTable(df.train_Ayushi_Mona_model_onlysig$housing, df.train_Ayushi_Mona_model_onlysig$y)
CrossTable(df.train_Ayushi_Mona_model_onlysig$loan, df.train_Ayushi_Mona_model_onlysig$y)
CrossTable(df.train_Ayushi_Mona_model_onlysig$poutcome, df.train_Ayushi_Mona_model_onlysig$y)

hist(df.train_Ayushi_Mona_model_onlysig$age)
hist(df.train_Ayushi_Mona_model_onlysig$balance)
hist(df.train_Ayushi_Mona_model_onlysig$duration)
hist(df.train_Ayushi_Mona_model_onlysig$campaign)
hist(df.train_Ayushi_Mona_model_onlysig$previous)

_modelmodel training set
result_Ayushi_Mona_model_probs$ypred = ifelse(result_Ayushi_Mona_model_probs$prob>=.5,'pred_yes','pred_no')
table(result_Ayushi_Mona_model_probs$ypred,result_Ayushi_Mona_model_probs$y)
df.test_Ayushi_Mona_model_onlysig$prob = predict(result_Ayushi_Mona_model_sig1, newdata = df.test_Ayushi_Mona_model_onlysig, type=c("response"))
df.test_Ayushi_Mona_model_onlysig$ypred = ifelse(df.test_Ayushi_Mona_model_onlysig$prob>=.5,'pred_yes','pred_no')
table(df.test_Ayushi_Mona_model_onlysig$ypred,df.test_Ayushi_Mona_model_onlysig$y)

ks_plot(actuals=result_Ayushi_Mona_model_probs$y, predictedScores=result_Ayushi_Mona_model_probs$ypred)

#end
